@using WordPressPCL
@using WordPressPCL.Utility
@inject WordPressClient WPClient;

@if (!_loading && null != _posts)
{
    <div class="row">
        @foreach (var post in _posts)
        {
            <div class="col-xs-1 col-md-6 col-lg-4 mb-4">
                <div class="card bg-dark text-white ">
                    <MediaImage MediaId="@post.FeaturedMedia" AltTitle="@post.Title.Rendered" CssClass="card-img" />
                    <div class="card-img-overlay d-flex flex-column">
                        <h5 class="card-title mt-auto">
                            <a href="@post.Link" target="_blank" class="text-white" title="@post.Title.Rendered">@((MarkupString) post.Title.Rendered)</a>
                        </h5>
                    </div>
                </div>
            </div>
        }
    </div>
}else if (_loading)
{
    <Loading />
}

@code {

    [Parameter]
    public PostsQueryBuilder Query { get; set; }

    private IEnumerable<WordPressPCL.Models.Post> _posts;
    private bool _loading = true;

    protected override async Task OnInitializedAsync()
    {
        await RefreshAsync();
    }

    private async Task RefreshAsync()
    {
        if (null == Query)
            return;

        _loading = true;

        _posts = await WPClient.Posts.Query(Query);

        _loading = false;
    }

}
    